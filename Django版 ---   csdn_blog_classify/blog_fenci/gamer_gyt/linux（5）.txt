CURL常用命令


下载单个文件，默认将输出打印到标准输出中(STDOUT)中

curl http://www.centos.org


通过-o/-O选项保存下载的文件到指定的文件中：
-o：将文件保存为命令行中指定的文件名的文件中
-O：使用URL中默认的文件名保存文件到本地

1 # 将文件下载到本地并命名为mygettext.html
2 curl -o mygettext.html http://www.gnu.org/software/gettext/manual/gettext.html
3 
4 # 将文件保存到本地并命名为gettext.html
5 curl -O http://www.gnu.org/software/gettext/manual/gettext.html


同样可以使用转向字符">"对输出进行转向输出

同时获取多个文件

1 curl -O URL1 -O URL2


若同时从同一站点下载多个文件时，curl会尝试重用链接(connection)。

通过-L选项进行重定向
默认情况下CURL不会发送HTTP Location headers(重定向).当一个被请求页面移动到另一个站点时，会发送一个HTTP Loaction header作为请求，然后将请求重定向到新的地址上。
例如：访问google.com时，会自动将地址重定向到google.com.hk上。


 1 curl http://www.google.com
 2 <HTML>
 3 <HEAD>
 4     <meta http-equiv="content-type" content="text/html;charset=utf-8">
 5     <TITLE>302 Moved</TITLE>
 6 </HEAD>
 7 <BODY>
 8     <H1>302 Moved</H1>
 9     The document has moved
10     <A HREF="http://www.google.com.hk/url?sa=p&amp;hl=zh-CN&amp;pref=hkredirect&amp;pval=yes&amp;q=http://www.google.com.hk/&amp;ust=1379402837567135amp;usg=AFQjCNF3o7umf3jyJpNDPuF7KTibavE4aA">here</A>.
11 </BODY>
12 </HTML>



上述输出说明所请求的档案被转移到了http://www.google.com.hk。

这是可以通过使用-L选项进行强制重定向

1 # 让curl使用地址重定向，此时会查询google.com.hk站点
2 curl -L http://www.google.com


断点续传

通过使用-C选项可对大文件使用断点续传功能，如：


1 # 当文件在下载完成之前结束该进程
2 $ curl -O http://www.gnu.org/software/gettext/manual/gettext.html
3 ##############             20.1%
4 
5 # 通过添加-C选项继续对该文件进行下载，已经下载过的文件不会被重新下载
6 curl -C - -O http://www.gnu.org/software/gettext/manual/gettext.html
7 ###############            21.1%



对CURL使用网络限速
通过--limit-rate选项对CURL的最大网络使用进行限制

1 # 下载速度最大不会超过1000B/second
2 
3 curl --limit-rate 1000B -O http://www.gnu.org/software/gettext/manual/gettext.html


下载指定时间内修改过的文件

当下载一个文件时，可对该文件的最后修改日期进行判断，如果该文件在指定日期内修改过，就进行下载，否则不下载。
该功能可通过使用-z选项来实现：

1 # 若yy.html文件在2011/12/21之后有过更新才会进行下载
2 curl -z 21-Dec-11 http://www.example.com/yy.html


CURL授权

在访问需要授权的页面时，可通过-u选项提供用户名和密码进行授权

1 curl -u username:password URL
2 
3 # 通常的做法是在命令行只输入用户名，之后会提示输入密码，这样可以保证在查看历史记录时不会将密码泄露
4 curl -u username URL


从FTP服务器下载文件

CURL同样支持FTP下载，若在url中指定的是某个文件路径而非具体的某个要下载的文件名，CURL则会列出该目录下的所有文件名而并非下载该目录下的所有文件

1 # 列出public_html下的所有文件夹和文件
2 curl -u ftpuser:ftppass -O ftp://ftp_server/public_html/
3 
4 # 下载xss.php文件
5 curl -u ftpuser:ftppass -O ftp://ftp_server/public_html/xss.php


上传文件到FTP服务器

通过 -T 选项可将指定的本地文件上传到FTP服务器上


# 将myfile.txt文件上传到服务器
curl -u ftpuser:ftppass -T myfile.txt ftp://ftp.testserver.com

# 同时上传多个文件
curl -u ftpuser:ftppass -T "{file1,file2}" ftp://ftp.testserver.com

# 从标准输入获取内容保存到服务器指定的文件中
curl -u ftpuser:ftppass -T - ftp://ftp.testserver.com/myfile_1.txt



获取更多信息

通过使用 -v 和 -trace获取更多的链接信息

通过字典查询单词


1 # 查询bash单词的含义
2 curl dict://dict.org/d:bash
3 
4 # 列出所有可用词典
5 curl dict://dict.org/show:db
6 
7 # 在foldoc词典中查询bash单词的含义
8 curl dict://dict.org/d:bash:foldoc



为CURL设置代理

-x 选项可以为CURL添加代理功能

1 # 指定代理主机和端口
2 curl -x proxysever.test.com:3128 http://google.co.in


 

其他网站整理

保存与使用网站cookie信息

1 # 将网站的cookies信息保存到sugarcookies文件中
2 curl -D sugarcookies http://localhost/sugarcrm/index.php
3 
4 # 使用上次保存的cookie信息
5 curl -b sugarcookies http://localhost/sugarcrm/index.php


传递请求数据

默认curl使用GET方式请求数据，这种方式下直接通过URL传递数据
可以通过 --data/-d 方式指定使用POST方式传递数据


1 # GET
2 curl -u username https://api.github.com/user?access_token=XXXXXXXXXX
3 
4 # POST
5 curl -u username --data "param1=value1&param2=value" https://api.github.com
6 
7 # 也可以指定一个文件，将该文件中的内容当作数据传递给服务器端
8 curl --data @filename https://github.api.com/authorizations



注：默认情况下，通过POST方式传递过去的数据中若有特殊字符，首先需要将特殊字符转义在传递给服务器端，如value值中包含有空格，则需要先将空格转换成%20，如：

1 curl -d "value%201" http://hostname.com


在新版本的CURL中，提供了新的选项 --data-urlencode，通过该选项提供的参数会自动转义特殊字符。

1 curl --data-urlencode "value 1" http://hostname.com


除了使用GET和POST协议外，还可以通过 -X 选项指定其它协议，如：

1 curl -I -X DELETE https://api.github.cim


上传文件

1 curl --form "fileupload=@filename.txt" http://hostname/resource


VirtualBox 虚拟Ubuntu系统与主机互ping

互ping的前提是主机和虚拟机的ip地址在同一波段【eg:主机为：192.168.1.10虚拟Linux：192.168.1.11】
1、设置主机ip：                                                                      

打开网络共享中心->更改适配器设置->以太网，修改其ip



在主机上运行CMD输入ipconfig显示如下

2、设置虚拟机ip：                                                                      
打开终端以root身份运行
执行 sudo gedit /etc/hosts   修改如下


执行 sudo gedit /etc/network/interfaces  修改如下


执行 sudo gedit /etc/resolv.conf  修改如下



nameserver后边紧跟的是主机的DNS，不同机器对应不同



重启网络服务
sudo /etc/init.d/networking restart

关闭防火墙
sudo ufw disable
3、虚拟机网络连接设置：                                                                      
小编亲测，若虚拟机网络格式设置错误的话是不会ping的通的，因此应该格外注意
若主机连的是WiFi，则虚拟机设置->网络->启用网络连接（桥接网卡，Realtek  ......   Wireless Lan .......）
若主机连的是有线网，则虚拟机设置->网络->启用网络连接（桥接网卡，Realtek  PCIe GBE Family ........）
至此，已全部设置成功，主机与虚拟机之间便可以互ping了


QQ技术交流：1923361654


linux ifconfig命令配置ip地址

Linux下网卡命名规律：eth0，eth1。第一块以太网卡，第二块。
lo为环回接口，它的IP地址固定为127.0.0.1，掩码8位。它代表你的机器本身。 
 
ifconfig [Interface]   

是查看网卡的信息 ，如果不加参数查看的是所有的网卡信息 
 


 
加上参数eth0的话是查看eth0网卡的信息 
 


 
网卡信息的一些解释： 
第一行：连接类型：Ethernet（以太网）HWaddr（硬件mac地址） 
 
第二三行：网卡的IP地址、子网、掩码 
 
第四行：UP（代表网卡开启状态）RUNNING（代表网卡的网线被接上）MULTICAST（支持组播）
MTU:1500（最大传输单元）：1500字节   www.2cto.com  
 
下面就是接收、发送数据包情况统计和发送接受数据字节数的统计信息。 
 
配置网卡的IP地址 
 
ifconfig eth0 192.168.168.64 netmask 255.255.255.0  
 
在eth0上配置上192.168.168.64 的IP地址及子网掩码。 
 
配置网卡的硬件地址 
ifconfig eth0 hw ether xx：xx：xx：xx：xx：xx  
 
禁用网卡eth0  

ifconfig eth0 down  
 
启用网卡eth0   

ifconfig eth0 up  
 
另外启动和禁用网卡还可以使用ifup | ifdown  eth0

VirtualBox 共享文件夹设置 及 开机自动挂载

首先声明：本人的Vbox虚拟机里装的是Ubuntu，本机是windows
1、用VirtualBox虚拟机的共享文件夹设置共享的本地文件（我的是设置的是本地E盘，java文件夹）



2、进入虚拟机Ubuntu系统，打开终端，用root用户操作（sudo -s回车输入密码）
首先在虚拟机上创建一个共享目录         eg:mkdir /mnt/share
实现挂载       mount -t vboxsf java /mnt/share    （java为本机windows上设置的共享文件夹） 

再次进入  /mnt/share  目录下就可以看到windows下java内的文件了


3、实现开机自动挂载功能
PS：网上查到了资料基本都是说在/etc/fstab 文件末添加一项

 /etc/fstab 文件末添加一项    



sharing /mnt/share vboxsf defaults 0 0   (或者sharing /mnt/share vboxsf rw,gid=100,uid=1000,auto 0 0）



注意！！！
但我试了N遍，证明这是不好使的。


正确的解决办法是：

在文件 /etc/rc.local 中（用root用户）追加如下命令


mount -t vboxsf java /mnt/share
电脑关机在开机就好使了（小编亲测）


另外，在 VirtualBox 4.x 版本中，已有一个“自动挂载”功能，如下图所示：


再使用命令 mount实现挂载
它自动把这些共享文件夹挂载到 /media/ ，目录下了，我想要说的是，这个挂载目录不是我想要的，
所以我没采用VirtualBox的自动挂载功能（因为挂载目录自己不可控）。






VirtualBox导入XXXX.vdi时报错

virtualbox导入vdi文件时出现下面的问题：



解决方法：
windows+R，输入cmd,进入virtualbox的安装目录（或者在硬盘中直接进入virtualbox的安装目录，在任务栏里输入cmd），输入VBoxManage 
 internalcommands setvdiuuid D:\path\ubuntu.vdi

 注意，在virtualbox4.0.4以上该命令改为
VBoxManage internalcommands sethduuid D:\path\ubuntu.vdi
然后重新导入即可。
这是一个重新设置UUID（通用唯一识别码）号的命令，VirtualBox没有集成到GUI环境中，只能在命令行中使用。


什么是UUID？    请点击UUID

Ubuntu下终端闪退


执行sudo ls -al / | grep tmp命令


继续执行命令：sudo
 chmod 1777 /temp即可

附：关于tmp的相关说明：
http://www.ubuntu-tw.org/modules/newbb/viewtopic.php?
viewmode=compact&topic_id=11904&forum=2

